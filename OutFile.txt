
Found Input File To Parse on disk = wcsrchr_braced.c
Output File = OutFile.txt

Function name is __VERIFIER_nondet_int
Function name is wcsrchr
Function body begins at line number = 11
Function body ends at line number = 17
Number of function arguments = 2
Argument 0 name = wcs
Argument 0 type = const int *
Argument 1 name = wc
Argument 1 type = int
VisitVarDecl :: Found VarDecl at line = 11
VisitVarDecl :: Found VarDecl at line = 11
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 11 and column = 50
VisitCompoundStmt :: CompoundStmt End line = 17 and column = 1
Original body code is {
  wchar_t* last=0;
  for (; *wcs; ++wcs)
    {{if (*wcs == wc)
      {last=(wchar_t*)wcs;}}}
  return last;

####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 11 and column 50 to line 17 and column 1
VisitCompoundStmt :: Substmt is DeclStmt at line 12
Pointer type is int * :: Variable name is last
Found POINTER int * :: Variable name is last
InitExpr is ImplicitCastExpr
POINTER InitExprStr is 0
VisitCompoundStmt :: Variable (SingleDecl) last of type int * declared at line 12 and column 3
VisitCompoundStmt :: Substmt is ForStmt at line 13
VisitCompoundStmt :: Substmt is ReturnStmt at line 16
show_scope_map :: Printing scope map
last => last 12 17
wc => wc 11 17
wcs => wcs 11 17
VisitVarDecl :: Found VarDecl at line = 12
VisitStmt :: For Statement Found
VisitForStmt :: No Decl Stmt found in Init
Added variable in For Stmt to scope map if it exists and Returned from getDeclInForStmt()
getArrayUseInLoop :: Stmt Body of CompoundStmt
getArrayUseInLoop :: Stmt at line 14 is CompoundStmt
Instrumentation flag = 2
check_variable_scope :: Checking scope of variable last at print line number : 14
 <<< check_variable_scope :: Variable last is in scope at print line number : 14 | scope begin = 12 | scope end = 17 >>> 
check_alloca_map :: Printing alloca map
check_variable_scope :: Checking scope of variable wc at print line number : 14
 <<< check_variable_scope :: Variable wc is in scope at print line number : 14 | scope begin = 11 | scope end = 17 >>> 
check_alloca_map :: Printing alloca map
check_variable_scope :: Checking scope of variable wcs at print line number : 14
 <<< check_variable_scope :: Variable wcs is in scope at print line number : 14 | scope begin = 11 | scope end = 17 >>> 
check_alloca_map :: Printing alloca map
Begin inscope_var_pairs :: Printing CBMC scope map
wc => int
End inscope_var_pairs :: Printing CBMC scope map
eqStrAnd = owc==wc
Instrumentation flag = 2
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 14 and column = 5
VisitCompoundStmt :: CompoundStmt End line = 15 and column = 29
Original body code is {{if (*wcs == wc)
      {last=(wchar_t*)wcs;}}
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 14 and column 5 to line 15 and column 29
VisitCompoundStmt :: Substmt is CompoundStmt at line 14
show_scope_map :: Printing scope map
last => last 12 17
wc => wc 11 17
wcs => wcs 11 17
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 14 and column = 6
VisitCompoundStmt :: CompoundStmt End line = 15 and column = 28
Original body code is {if (*wcs == wc)
      {last=(wchar_t*)wcs;}
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 14 and column 6 to line 15 and column 28
VisitCompoundStmt :: Substmt is IfStmt at line 14
show_scope_map :: Printing scope map
last => last 12 17
wc => wc 11 17
wcs => wcs 11 17
VisitStmt :: If Statement Found at line 14
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 15 and column = 7
VisitCompoundStmt :: CompoundStmt End line = 15 and column = 27
Original body code is {last=(wchar_t*)wcs;
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 15 and column 7 to line 15 and column 27
VisitCompoundStmt :: Substmt is BinaryOperator at line 15
show_scope_map :: Printing scope map
last => last 12 17
wc => wc 11 17
wcs => wcs 11 17
Function name is main
Function body begins at line number = 20
Function body ends at line number = 27
Number of function arguments = 0
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 20 and column = 11
VisitCompoundStmt :: CompoundStmt End line = 27 and column = 1
Original body code is {
  int in_len = __VERIFIER_nondet_int();
  {if(in_len < 1){return 1;}}
  wchar_t* hay = alloca(in_len*sizeof(wchar_t));
  hay[in_len-1]=0;
  wchar_t needle = __VERIFIER_nondet_int();
  return (int) wcsrchr(hay, needle);

####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 20 and column 11 to line 27 and column 1
VisitCompoundStmt :: Substmt is DeclStmt at line 21
VisitCompoundStmt :: Variable (SingleDecl) in_len of type int declared at line 21 and column 3
VisitCompoundStmt :: Substmt is CompoundStmt at line 22
VisitCompoundStmt :: Substmt is DeclStmt at line 23
Pointer type is int * :: Variable name is hay
Found POINTER int * :: Variable name is hay
InitExpr is ImplicitCastExpr
alloca found in POINTER InitExprStr alloca(in_len * sizeof(int))
POINTER InitExprStr is alloca(in_len * sizeof(int))
VisitCompoundStmt :: Variable (SingleDecl) hay of type int * declared at line 23 and column 3
VisitCompoundStmt :: Substmt is BinaryOperator at line 24
VisitCompoundStmt :: Substmt is DeclStmt at line 25
VisitCompoundStmt :: Variable (SingleDecl) needle of type int declared at line 25 and column 3
VisitCompoundStmt :: Substmt is ReturnStmt at line 26
show_scope_map :: Printing scope map
hay => hay 23 27
in_len => in_len 21 27
last => last 12 17
needle => needle 25 27
wc => wc 11 17
wcs => wcs 11 17
VisitVarDecl :: Found VarDecl at line = 21
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 22 and column = 3
VisitCompoundStmt :: CompoundStmt End line = 22 and column = 29
Original body code is {if(in_len < 1){return 1;}
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 22 and column 3 to line 22 and column 29
VisitCompoundStmt :: Substmt is IfStmt at line 22
show_scope_map :: Printing scope map
hay => hay 23 27
in_len => in_len 21 27
last => last 12 17
needle => needle 25 27
wc => wc 11 17
wcs => wcs 11 17
VisitStmt :: If Statement Found at line 22
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt Begin line = 22 and column = 18
VisitCompoundStmt :: CompoundStmt End line = 22 and column = 28
Original body code is {return 1;
####################### CompoundStmt Code Range #######################
VisitCompoundStmt :: CompoundStmt at line 22 and column 18 to line 22 and column 28
VisitCompoundStmt :: Substmt is ReturnStmt at line 22
show_scope_map :: Printing scope map
hay => hay 23 27
in_len => in_len 21 27
last => last 12 17
needle => needle 25 27
wc => wc 11 17
wcs => wcs 11 17
VisitVarDecl :: Found VarDecl at line = 23
VisitVarDecl :: Found VarDecl at line = 25

Finished call to function ParseAST  

 Rewrite Buffer is Not NULL 

Finished Rewriting 

 End Main 
