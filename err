
Input File is : input/test1.c

 Recurrent set instrumentation

Rewriter Init
getArrayUseInLoop :: Stmt at line 21 is BinaryOperator
getArrayUseInLoop :: LHS at 21 is DeclRefExpr
getArrayUseInLoop :: RHS at 21 is BinaryOperator
getArrayUseInLoop :: Stmt at line 22 is BinaryOperator
getArrayUseInLoop :: LHS at 22 is ArraySubscriptExpr
getArrayUseInLoop :: RHS at 22 is ImplicitCastExpr
lhs is ArraySubscriptExpr
getArrayUseInLoop :: ArraySubscriptExpr at line 22
 <<< check_variable_scope :: Variable array is in scope at print line number : 20 | scope begin = 14 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable arrayindex is in scope at print line number : 20 | scope begin = 15 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable x is in scope at print line number : 20 | scope begin = 12 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable y is in scope at print line number : 20 | scope begin = 13 | scope end = 38 >>> 
Instrumentation flag = 1
Decl is Var
Decl is Var
getArrayUseInLoop :: Stmt at line 27 is BinaryOperator
getArrayUseInLoop :: LHS at 27 is DeclRefExpr
getArrayUseInLoop :: RHS at 27 is ImplicitCastExpr
getArrayUseInLoop :: Stmt at line 28 is BinaryOperator
getArrayUseInLoop :: LHS at 28 is ArraySubscriptExpr
getArrayUseInLoop :: RHS at 28 is ImplicitCastExpr
lhs is ArraySubscriptExpr
getArrayUseInLoop :: ArraySubscriptExpr at line 28
 <<< check_variable_scope :: Variable array is in scope at print line number : 26 | scope begin = 14 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable arrayindex is in scope at print line number : 26 | scope begin = 15 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable loopi is in scope at print line number : 26 | scope begin = 26 | scope end = 29 >>> 
 <<< check_variable_scope :: Variable loopj is in scope at print line number : 26 | scope begin = 26 | scope end = 29 >>> 
 <<< check_variable_scope :: Variable x is in scope at print line number : 26 | scope begin = 12 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable y is in scope at print line number : 26 | scope begin = 13 | scope end = 38 >>> 
Instrumentation flag = 1
getArrayUseInLoop :: Stmt at line 32 is BinaryOperator
getArrayUseInLoop :: LHS at 32 is DeclRefExpr
getArrayUseInLoop :: RHS at 32 is BinaryOperator
getArrayUseInLoop :: Stmt at line 33 is BinaryOperator
getArrayUseInLoop :: LHS at 33 is ArraySubscriptExpr
getArrayUseInLoop :: RHS at 33 is ImplicitCastExpr
lhs is ArraySubscriptExpr
getArrayUseInLoop :: ArraySubscriptExpr at line 33
rhs is ArraySubscriptExpr
getArrayUseInLoop :: ArraySubscriptExpr at line 33
getArrayUseInLoop :: Stmt at line 34 is BinaryOperator
getArrayUseInLoop :: LHS at 34 is DeclRefExpr
getArrayUseInLoop :: RHS at 34 is ImplicitCastExpr
 <<< check_variable_scope :: Variable array is in scope at print line number : 31 | scope begin = 14 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable arrayindex is in scope at print line number : 31 | scope begin = 15 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable x is in scope at print line number : 31 | scope begin = 12 | scope end = 38 >>> 
 <<< check_variable_scope :: Variable y is in scope at print line number : 31 | scope begin = 13 | scope end = 38 >>> 
Instrumentation flag = 1
/*
 * Date: 06/07/2015
 * Created by: Ton Chanh Le (chanhle@comp.nus.edu.sg)
 */

typedef enum {false, true} bool;

extern int __VERIFIER_nondet_int(void);

int main()
{
    int x;
    int y;
    float array[10];
    int arrayindex=2;
    x = __VERIFIER_nondet_int();
    y = __VERIFIER_nondet_int();

	if (y >= 0) {
	    while (x >= 0) {printf("DirNT State @ line20: <");printf("arrayindex=%d,",arrayindex);printf("x=%d,",x);printf("y=%d,",y);printf(">\n");
	    	x = x - y;
		array[5]=1;
    	}
	}

	for (int loopi, loopj;loopi<10;loopi++){printf("DirNT State @ line895777088: <");printf("arrayindex=%d,",arrayindex);printf("loopi=%d,",loopi);printf("loopj=%d,",loopj);printf("x=%d,",x);printf("y=%d,",y);printf(">\n");
		x=loopi;
		array[arrayindex]=1;
		}

	    while (x >= 0) {printf("DirNT State @ line31: <");printf("arrayindex=%d,",arrayindex);printf("x=%d,",x);printf("y=%d,",y);printf(">\n");
	    	x = x - y;
		array[arrayindex]=array[3];
		x=array[arrayindex];
	}

	return 0;
}
